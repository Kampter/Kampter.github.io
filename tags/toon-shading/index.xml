<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Toon Shading on Kampter</title><link>https://kampter.github.io/tags/toon-shading/</link><description>Recent content in Toon Shading on Kampter</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 15 Feb 2023 19:10:20 +0000</lastBuildDate><atom:link href="https://kampter.github.io/tags/toon-shading/index.xml" rel="self" type="application/rss+xml"/><item><title>GGJ2023 x GiCA 中国站回顾</title><link>https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/</link><pubDate>Wed, 15 Feb 2023 19:10:20 +0000</pubDate><guid>https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/</guid><description>&lt;h2 id="心得">心得
&lt;/h2>&lt;p>抱歉这么晚才来写这个回顾，近期忙于过年，情人节，以及学习等等事项，年后到现在终于有一段时间相对比较安静可以回顾一下这个赛事。&lt;/p>
&lt;p>首先感谢GGJ 2023能在这个时期召开，我从前公司离职到现在学习游戏制作已经有半年多的时间。一直在学习但是没有什么机会能够回顾学会什么，还欠缺什么，还想要什么。而且在这种比赛的压力下，很多问题才会暴漏出来，感谢这次能够让我总结的机会。&lt;/p>
&lt;p>其次感谢我的组员：&lt;/p>
&lt;figure>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230215213145732.png" width="60%">
&lt;/figure>
&lt;p>48小时开发辛苦了，组内的除了我之外都是已经在游戏公司内工作的大佬，很高兴能与你们一起合作完成这个作品，希望我没有给你们拖后腿。&lt;/p>
&lt;p>最后感谢我的女朋友，感谢她在开发前与我一起准备；开发中陪伴我并鼓励，帮我一起寻找灵感；结束后我们一起分享喜悦。她也喜欢游戏，也喜欢宫崎骏的动画。游戏场景内的部分渲染风格也是我的一点私心，希望未来有机会能构建一个独属于我们的世界。&lt;/p>
&lt;figure>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230215211434958.png" width="60%">
&lt;/figure>
&lt;figure>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/%E5%8D%A1%E7%89%87.png" width="60%">
&lt;/figure>
&lt;h2 id="技术实现">技术实现
&lt;/h2>&lt;p>鉴于这个48小时的小项目，虽然之前一直在玩HDRP渲染管线。这次就老老实实用URP了，这也是我第一次用URP。之前在HDRP中大部分shader都用shader graph就可以完成，这次在urp中纯手写还是很有挑战性的。&lt;/p>
&lt;p>整体美术风格，希望尝试一下卡通渲染。场景渲染希望借鉴吉卜力风格治愈、唯美的感觉，同时借鉴宫崎骏动画中对自然和平的追求。而人物我们选择格鲁特这一经典漫威角色，我想尝试一下厚涂风格带来的立体感。&lt;/p>
&lt;h3 id="找参考">找参考
&lt;/h3>&lt;p>背景参考，可以说是整个流程里最轻松的部分。因为我需要做的就是去看原来知名的对应题材的作品，游戏，动画，影视等。寻找其中的共同背景，色彩构成，空间元素构成。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/703b0a60d112ce88a03b199f9adc5ae.png"
width="1862"
height="1174"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/703b0a60d112ce88a03b199f9adc5ae_hu_9a9e5279d7dd725f.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/703b0a60d112ce88a03b199f9adc5ae_hu_f96234085d288298.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="158"
data-flex-basis="380px"
>&lt;/p>
&lt;p>乱糟糟随心所欲找了一些东西，也没有成体系。理想的过程是从图片总结出风格特点，再转化成引擎可以实现的方案做出来。&lt;/p>
&lt;h3 id="基础场景搭建">基础场景搭建
&lt;/h3>&lt;p>刚好在2022年底花不少精力学习和排坑的houdini PDG流程这次刚好可以应该用在这次项目中。&lt;/p>
&lt;p>用houdini 生成Heightmap已经是非常轻松愉快的事情了，这个项目不需要高精度雕琢，简单调整一些细节就可以搭建PDG节点了。哦对，在这之前要在unity中准备好terrain layer以及通过随即撒点种植的植物prefab，同时设置好LOD。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230215220731444.png"
width="2560"
height="1351"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230215220731444_hu_1ee2a1aad527a3f.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230215220731444_hu_dfa6d5731e9b26a9.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="189"
data-flex-basis="454px"
>&lt;/p>
&lt;hr>
&lt;p>大致流程就是在houdini中获取unity中准备好的prefab path，导出至foliage.csv中，然后把unity_instance写入prefab path属性再导入unity中cook。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230215221135811.png"
width="2560"
height="1351"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230215221135811_hu_c4966879b34ca806.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230215221135811_hu_e0445ef7697d8848.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="189"
data-flex-basis="454px"
>&lt;/p>
&lt;p>用attributewrangle读取csv文件中的路径并写入撒点的s@unity_instance属性中，这一步操作很像之前在jupyter中操作csv文件。可以加一步将position, normal, orient, pscale等属性导出Pcache，通过VFX graph制作可交互的草地（官方演示Demo）这次没有使用。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230215221611733.png"
width="584"
height="407"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230215221611733_hu_821b39769ac0a972.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230215221611733_hu_2b133ebfda567479.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="143"
data-flex-basis="344px"
>&lt;/p>
&lt;hr>
&lt;p>成品效果大致是这样，忽略这个很像ue的场景，是ECS2 input system自带的。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/751808d6ddf300ae5d6ad432bd58b9b.png"
width="3080"
height="1801"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/751808d6ddf300ae5d6ad432bd58b9b_hu_215ce7582ab32b47.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/751808d6ddf300ae5d6ad432bd58b9b_hu_a63d6690bcd09da1.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="171"
data-flex-basis="410px"
>&lt;/p>
&lt;hr>
&lt;p>###草地渲染&lt;/p>
&lt;p>目前我比较喜欢的有三种方式来制作草地。&lt;/p>
&lt;ul>
&lt;li>第一种是terrain笔刷刷上带LOD的prefab模型，这是渲染效果最好的方案，也是成本最高的。&lt;/li>
&lt;li>第二种是terrain笔刷刷上带LOD的prefab插片草地，效果对比第一种略显粗糙但是性能提高很多。&lt;/li>
&lt;li>第三种来自官方的GrassWind Demo，在VFX graph中使用刚刚houdini导出的Pcache，而模型的部分可以任选模型或者插片，只是性能上的区别。&lt;/li>
&lt;/ul>
&lt;p>这次方案我们选择了第二种，带LOD的插片草地。插片草地的制作也很简单，在houdini中简单调整一下位置，垂直相机拍摄出texture即可。注意传递球形法线并且只保留向上的部分。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216001916221.png"
width="2560"
height="1351"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216001916221_hu_13235abfcb8cfcee.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216001916221_hu_834736e56363f45c.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="189"
data-flex-basis="454px"
>&lt;/p>
&lt;hr>
&lt;p>然后用triangulate2d 勾勒出边界并且组合成插片草模型。草地模型导入unity后关闭投射阴影，降低阴影带来的杂乱感。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216004203478.png"
width="2560"
height="1351"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216004203478_hu_eccff38234101ae3.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216004203478_hu_d77b867f4fb189b1.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="189"
data-flex-basis="454px"
>&lt;/p>
&lt;hr>
&lt;p>草地渲染shader 我这次使用shader graph来制作，感谢2021.3版本的urp中支持shader graph。&lt;/p>
&lt;p>把草从上到下用top color和bottom color lerp起来控制主体，随后叠加两层gradient noise从整体控制草地的颜色而不仅仅是单一模型的变化同时模拟草地整体阴影效果。Wind的vertex movment也是同理，但是这里偷懒没有做，后面有机会去实现一下。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216001735010.png"
width="2546"
height="1373"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216001735010_hu_aab1116c44ff2209.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216001735010_hu_5adc54b518fc3c03.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="185"
data-flex-basis="445px"
>&lt;/p>
&lt;h3 id="树木渲染">树木渲染
&lt;/h3>&lt;p>树干的部分用half lambert 和blinn specular实现。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// diffuse&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SAMPLE_TEXTURE2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sampler_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">IN&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_BaseColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// specular&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">_smoothness&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SAMPLE_TEXTURE2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_SmoothTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sampler_SmoothTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">IN&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ndotH&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_smoothness&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">lightColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// lambert&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">lambert&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ndotL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">halfLambert&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">saturate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lambert&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">colorLambert&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">halfLambert&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_ColorLambertFactor&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">_ColorLambertFactor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float3&lt;/span> &lt;span class="n">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">colorLambert&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>树叶也使用插片树叶实现，shader部分略微复杂，除了half lambert 和blinn specular以外。计算树叶自阴影增加细节。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">shadowWS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TransformWorldToShadowCoord&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IN&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">positionWS&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">shadowAttenuation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">GetMainLight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shadowWS&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">shadowAttenuation&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">color&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nb">lerp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">shadowAttenuation&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_ShadowIntensity&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>模拟投射效果，很大程度上提升树叶颜色的纯度。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">float3 transmissionhalf = normalWS + normalize(lightDir);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">float3 transmission = saturate(dot(-transmissionhalf, viewDirWS) - _TransmissionThreshold);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">transmission = lerp( 1 + 0.5 * _TransmissionIntensity, 1 +_TransmissionIntensity, transmission);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">color = color * transmission;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>模拟假的SSS效果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">half3 step1 = -1 * saturate((normalWS * _NormalInfluence * lightDir));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">half4 step2 = pow(saturate(dot(step1, viewDirWS)), _SSSPower) * _SSSColor;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">half4 step3 = (1 - _Thickness) * step2;color = color + step3;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最后的效果图如下，踩坑点，记得写阴影pass并且阴影也要alpha clip。还是比较杂乱，没有把模型导入houdini传递一下球形法线，48小时时间来不及了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Name&lt;/span> &lt;span class="s2">&amp;#34;Depth Rim&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Tags&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;LightMode&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;DepthOnly&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ZWrite&lt;/span> &lt;span class="n">On&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ColorMask&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Cull&lt;/span> &lt;span class="n">Off&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">HLSLPROGRAM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#pragma vertex DepthOnlyVertex&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#pragma fragment DepthOnlyFragment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#include &amp;#34;Packages/com.unity.render-pipelines.universal/Shaders/LitInput.hlsl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">TEXTURE2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="n">SAMPLER&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sampler_MainTex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">CBUFFER_START&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityPerMaterial&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">half4&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">half&lt;/span> &lt;span class="n">_ClipValue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">CBUFFER_END&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">struct&lt;/span> &lt;span class="n">Attributes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">float4&lt;/span> &lt;span class="n">positionOS&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">float2&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">UNITY_VERTEX_INPUT_INSTANCE_ID&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">struct&lt;/span> &lt;span class="n">Varyings&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">float2&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">float4&lt;/span> &lt;span class="n">positionCS&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">UNITY_VERTEX_INPUT_INSTANCE_ID&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">UNITY_VERTEX_OUTPUT_STEREO&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Varyings&lt;/span> &lt;span class="n">DepthOnlyVertex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Attributes&lt;/span> &lt;span class="n">IN&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">VertexPositionInputs&lt;/span> &lt;span class="n">vertex_position_inputs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">GetVertexPositionInputs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IN&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">positionOS&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Varyings&lt;/span> &lt;span class="n">OUT&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">OUT&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">positionCS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vertex_position_inputs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">positionCS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">OUT&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uv&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TRANSFORM_TEX&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IN&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">);;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">OUT&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">half4&lt;/span> &lt;span class="n">DepthOnlyFragment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Varyings&lt;/span> &lt;span class="n">IN&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">SV_TARGET&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">input&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">half4&lt;/span> &lt;span class="n">diffColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SAMPLE_TEXTURE2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sampler_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">IN&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">clip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">diffColor&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">_ClipValue&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ENDHLSL&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216011958528.png"
width="1474"
height="808"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216011958528_hu_29bb88d8860f2ca4.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216011958528_hu_f4eb181b53495093.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="182"
data-flex-basis="437px"
>&lt;/p>
&lt;hr>
&lt;h3 id="人物渲染">人物渲染
&lt;/h3>&lt;p>人物渲染我用的是shader graph + custom function的方式实现。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216140256869.png"
width="1766"
height="941"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216140256869_hu_8ca8c41cbf5cb635.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216140256869_hu_8ee31b3354aea349.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="187"
data-flex-basis="450px"
>&lt;/p>
&lt;hr>
&lt;p>大致思路与直接手写没有太大区别。首先遍历场景内的灯光（多灯光支持）获得每个灯光的颜色，方向，衰减属性用以叠加计算。光照模型用smoothstep函数控制半兰伯特模型的输出，同时设置Smooth参数来调整边界的光滑度。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216141054289.png"
width="300"
height="400"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216141054289_hu_b34f63e01a28ed83.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216141054289_hu_f897d7a2702b5b78.png 1024w"
loading="lazy"
alt="原始效果"
class="gallery-image"
data-flex-grow="75"
data-flex-basis="180px"
>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216141119084.png"
width="300"
height="400"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216141119084_hu_48caad2b29609533.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216141119084_hu_c9a29138fb6ec0ae.png 1024w"
loading="lazy"
alt="smoothstep"
class="gallery-image"
data-flex-grow="75"
data-flex-basis="180px"
>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216141856838.png"
width="300"
height="400"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216141856838_hu_5ca55bd986574592.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216141856838_hu_cd79365eb0747c64.png 1024w"
loading="lazy"
alt="smooth"
class="gallery-image"
data-flex-grow="75"
data-flex-basis="180px"
>&lt;/p>
&lt;hr>
&lt;p>最左边smooth = 0, 中间smooth = 0.2 右边为开启边缘光的效果。边缘光用非常偷懒的方式实现&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216141737262.png"
width="1020"
height="455"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216141737262_hu_bde259ad3a6c1864.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216141737262_hu_8c4b0751ec29faf9.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="224"
data-flex-basis="538px"
>&lt;/p>
&lt;hr>
&lt;h3 id="水面渲染">水面渲染
&lt;/h3>&lt;p>用根据时间变化的gradient noise控制水面的vertex position 移动，主要用以实现小幅度的潮汐的感觉。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216144605097.png"
width="1207"
height="480"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216144605097_hu_ab62e360281cda95.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216144605097_hu_3a45ff75c48dbe3a.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="251"
data-flex-basis="603px"
>&lt;/p>
&lt;hr>
&lt;p>水面颜色用屏幕空间深度来控制，lerp深水区和浅水区颜色，这个实现来自unity的官方演示视频。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145156030.png"
width="1254"
height="463"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145156030_hu_392fbc76d3304d00.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145156030_hu_34a59ba4b6590091.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="270"
data-flex-basis="650px"
>&lt;/p>
&lt;hr>
&lt;p>通过调整Strength和depth控制浅水和深水区&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145341579.png"
width="500"
height="300"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145341579_hu_13fd93605ecc42b0.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145341579_hu_a4cbb23d2a330dad.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="166"
data-flex-basis="400px"
>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145357665.png"
width="500"
height="300"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145357665_hu_2b5a5cbec0ca587d.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145357665_hu_64a87d697d62c287.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="166"
data-flex-basis="400px"
>&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145036049.png"
width="535"
height="401"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145036049_hu_b43d470eeb5d1a7e.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145036049_hu_935dfe2f1da26466.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p>
&lt;hr>
&lt;p>反射和水面波纹实现。选取两张水面法线纹理图，设置好根据时间移动的方向和速度，用reoriented normal blend的叠加方式（效果更好），用以模拟水面被风吹动的波纹。水面反射通过把刚刚的结果叠加至Screen position中，再把结果输出至Scene Color的UV中, 与给刚刚求得的深度图结果根据aplha通道进行lerp，输出至normal即可获得还算不错的具有反射效果的水面波纹。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216150250404-1679568609839-1.png"
width="1249"
height="450"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216150250404-1679568609839-1_hu_31687bcaff5db8e.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216150250404-1679568609839-1_hu_7376dba1cc7f17f5.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="277"
data-flex-basis="666px"
>&lt;/p>
&lt;hr>
&lt;p>最终效果如图&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145806132.png"
width="1562"
height="814"
srcset="https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145806132_hu_944fb9f9f475efbc.png 480w, https://kampter.github.io/p/ggj2023-x-gica-%E4%B8%AD%E5%9B%BD%E7%AB%99%E5%9B%9E%E9%A1%BE/image-20230216145806132_hu_bd70a21bea1649d8.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="191"
data-flex-basis="460px"
>&lt;/p>
&lt;hr>
&lt;h3 id="体积云">体积云
&lt;/h3>&lt;p>云直接用的cubemap贴图贴上去的skybox，48小时实在没有时间实现了&lt;/p>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>不少内容都是临时拼凑和网上抄来的，也没有认真调整和细化方案，没有定制自己的东西。感觉还是太菜了，希望接下来继续沉下来多积累一些东西。&lt;/p>
&lt;h2 id="参考">参考
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/593500186" target="_blank" rel="noopener"
>风格化树——树叶分析与实现 - 知乎 (zhihu.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/482749051" target="_blank" rel="noopener"
>水一下原神树的渲染 - 知乎 (zhihu.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.youtube.com/watch?v=gRq-IdShxpU" target="_blank" rel="noopener"
>Making a Water Shader in Unity with URP! (Tutorial) - YouTube&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.youtube.com/watch?v=FIP6I1x6lMA" target="_blank" rel="noopener"
>(4) Unity | Making a Lit Toon Shader in Shader Graph - YouTube&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>URP仿原神渲染shader</title><link>https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/</link><pubDate>Sun, 05 Feb 2023 21:56:47 +0000</pubDate><guid>https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/</guid><description>&lt;h2 id="技术实现">技术实现
&lt;/h2>&lt;p>在原神二测就有来体验过游戏，也是一步一步看着原神成长壮大封神的，一直以来都对于这样认真做内容的游戏公司怀有敬意。这次终于“敢”在掌握一定技术的情况下来模仿原神的渲染效果。&lt;/p>
&lt;h3 id="模型准备">模型准备
&lt;/h3>&lt;p>模型下载自米哈游官方在B站开展的二创活动pmx格式，直接网上随便找个converter即可转为fbx方便使用，这里选择刻晴作为测试人物模型。而神奇的google有人通过神奇的方式获得其他的贴图文件。汇总起来一共获得这些文件：&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218220545641.png"
width="883"
height="559"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218220545641_hu_5a411de921b25758.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218220545641_hu_77c21e8d82cba975.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="157"
data-flex-basis="379px"
>&lt;/p>
&lt;h3 id="贴图分析">贴图分析
&lt;/h3>&lt;p>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218220828197.png"
width="1458"
height="739"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218220828197_hu_c743d04e70ccc130.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218220828197_hu_34d1090c31daf2fd.png 1024w"
loading="lazy"
alt="Lightmap.r"
class="gallery-image"
data-flex-grow="197"
data-flex-basis="473px"
>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218220928101.png"
width="1458"
height="739"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218220928101_hu_f2d9211b4c682a39.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218220928101_hu_3ce06fe1b1a456d.png 1024w"
loading="lazy"
alt="Lightmap.g"
class="gallery-image"
data-flex-grow="197"
data-flex-basis="473px"
>&lt;/p>
&lt;p>Lightmap.r = Specular Mask&lt;/p>
&lt;p>Lightmap.g = AO Map&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221112035.png"
width="1458"
height="739"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221112035_hu_f0ea9587a2f93d38.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221112035_hu_2f44e084f1d5dab3.png 1024w"
loading="lazy"
alt="Lightmap.b"
class="gallery-image"
data-flex-grow="197"
data-flex-basis="473px"
>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221128126.png"
width="1458"
height="739"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221128126_hu_f0ea9587a2f93d38.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221128126_hu_2f44e084f1d5dab3.png 1024w"
loading="lazy"
alt="lightmap.a"
class="gallery-image"
data-flex-grow="197"
data-flex-basis="473px"
>&lt;/p>
&lt;p>Lightmap.b = Roughness&lt;/p>
&lt;p>lightmap.a = Emission Mask&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221323235.png"
width="1458"
height="739"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221323235_hu_f8343352c188750d.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221323235_hu_b9ed71c683d8a2fd.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="197"
data-flex-basis="473px"
>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218215709325.png"
width="1458"
height="739"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218215709325_hu_15fb79fa42f7a82c.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218215709325_hu_6bde7280b2ddaacb.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="197"
data-flex-basis="473px"
>&lt;/p>
&lt;p>diffuse.a 在脸部，肌肉和上衣打底部分是由不为1的数值的&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221653598.png"
width="1207"
height="164"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221653598_hu_dcb76ca124cea4c8.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221653598_hu_40fb4aa68ef0535b.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="735"
data-flex-basis="1766px"
>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221715972.png"
width="1223"
height="145"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221715972_hu_ec196ba880dc8e48.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230218221715972_hu_7437331a2adbc8af.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="843"
data-flex-basis="2024px"
>&lt;/p>
&lt;p>两张Ramp贴图让我想到军团要塞2中的wrapdiffuse处理，思路应该类似。而大佬们的文章表示贴图里有十条Ramp，分为上下各五条 分别对应白天和晚上。&lt;/p>
&lt;h3 id="贴图和基础计算准备">贴图和基础计算准备
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Direction Function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">viewDirWS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">GetWorldSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IN&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">positionWS&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">normalWS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">IN&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normalWS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Light Calculation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Light&lt;/span> &lt;span class="n">mainLight&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">GetMainLight&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">lightColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kt">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mainLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">color&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//获取主光源颜色&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">lightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mainLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">direction&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//主光源方向&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Albedo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SAMPLE_TEXTURE2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sampler_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">IN&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">vertexColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">IN&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertexColor&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//顶点色&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Texture Sampling&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// lightmap&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// R channel = Specular Mask&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// G channel = AO Map&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// B channel = Roughness&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// A channel = Emission Mask&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 灰度1.0 ： 皮肤质感/头发质感（头发的部分是没有皮肤的）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 灰度0.7 ： 丝绸/丝袜&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 灰度0.5 ： 金属/金属投影&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 灰度0.3 ： 软的物体&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 灰度0.0 ： 硬的物体&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">lightMap&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SAMPLE_TEXTURE2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_LightMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sampler_LightMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">IN&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Dot Product Function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">ndotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalWS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">ndotH&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalWS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">viewDirWS&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">lightDir&lt;/span>&lt;span class="p">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">ndotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalWS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">viewDirWS&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">ndotU&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalWS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0&lt;/span>&lt;span class="p">)));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="adjusted-halflambert">Adjusted HalfLambert
&lt;/h3>&lt;p>基础的半兰伯特模型，加上用定点色做调整。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//lambert&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">lambert&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ndotL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">lambertAO&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">lambert&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nb">saturate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lightMap&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">g&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">lambertRampAO&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">smoothstep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_ShadowSmooth&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lambertAO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// using vertex color as an offset to adjust half lambert sampling&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">halfLambertAO&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">saturate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lambertRampAO&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_WrapDiffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">_WrapDiffuse&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">vertexOffset&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">step&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">vertexColor&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">vertexColor&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">vertexColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">adjustedHalfSampler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">saturate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">halfLambertAO&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">vertexOffset&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里 AO的地方自定义（lightmap.g ）乘2用来获得对比度更加明显的AO效果_ShadowSmooth 用来调整亮部到暗部过度的明显程度，左边0.5，右侧1.0。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230219155213146.png"
width="350"
height="600"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230219155213146_hu_2c153fa7a4a839ee.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230219155213146_hu_2daba9cac6a91e4a.png 1024w"
loading="lazy"
alt="0.5"
class="gallery-image"
data-flex-grow="58"
data-flex-basis="140px"
>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230219155240254.png"
width="350"
height="600"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230219155240254_hu_e9fda24d8f68c409.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230219155240254_hu_97571f7e64d05dfd.png 1024w"
loading="lazy"
alt="1"
class="gallery-image"
data-flex-grow="58"
data-flex-basis="140px"
>&lt;/p>
&lt;h3 id="wrapped-diffuse">Wrapped Diffuse
&lt;/h3>&lt;p>回顾一下军团要塞2中Ramp使用方式&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">ramp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SAMPLE_TEXTURE2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_RampMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sampler_RampMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">half2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">halfLambert&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>原神的衣服整体并不受环境光颜色直接影响，这里面需要计算是否是白天或者夜晚。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Day (0.5) or Night(0)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">dayOrNight&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nb">step&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_IsNight&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.03&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// diffuse = ramp + adjusted half lambert + AO&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">rampV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">saturate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lightMap&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.45&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">dayOrNight&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half2&lt;/span> &lt;span class="n">rampUV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kt">half2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">adjustedHalfSampler&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rampV&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>把ramp的V方向取值，0-0.5为 黑天，0.5-1为白天，取代军团要塞中V方向只有单条ramp取值。&lt;/p>
&lt;h3 id="specular">Specular
&lt;/h3>&lt;p>金属部分使用到metalMap高光，实现原理来自MatCap采样。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Metal Specular&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">metalMask&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">step&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.95&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightMap&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">cameraForward&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">viewDirWS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">viewUpDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UNITY_MATRIX_I_V&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">cameraRight&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SafeNormalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">cross&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">viewUpDir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cameraForward&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">cameraUp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SafeNormalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">cross&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cameraForward&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cameraRight&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half2&lt;/span> &lt;span class="n">metalMapUV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">half3x3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cameraRight&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cameraUp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cameraForward&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">normalWS&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.49&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">metalMap&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SAMPLE_TEXTURE2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MetalMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sampler_MetalMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metalMapUV&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">metalSpecular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_MetalIntensity&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">metalMap&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">metalMask&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>非金属部分使用常规的Blinn Phong高光&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">half Ks = 0.96;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">half SpecularPow = exp2(lightMap.r * 11.0 + 2.0);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">half SpecularNorm = (SpecularPow + 8.0) / 8.0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">half4 SpecularColor = albedo * lightMap.g;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">half SpecularContrib = albedo * (SpecularNorm * pow(ndotH, SpecularPow));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">half4 nonMetalSpecular = SpecularColor * SpecularContrib * ndotL* Ks * lightMap.b;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230219192536859.png"
width="1458"
height="739"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230219192536859_hu_6031231678db6786.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230219192536859_hu_2f248ad473415730.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="197"
data-flex-basis="473px"
>&lt;/p>
&lt;hr>
&lt;p>自发光&lt;/p>
&lt;p>这里我用自发光来描绘裸漏皮肤以及丝袜部分SSS材质的效果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Emission (Fake SSS)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">emissionMask&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">emissionMask&lt;/span> &lt;span class="o">*=&lt;/span> &lt;span class="nb">step&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.65&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightMap&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// half time = abs((frac(_Time.y * 0.5) - 0.5) * 2);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">emission&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">lightColor&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">emissionMask&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_EmissionIntensity&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_EmissionColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230219213213931.png"
width="1458"
height="739"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230219213213931_hu_47899cfa5baf06e3.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230219213213931_hu_430b740a795573e5.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="197"
data-flex-basis="473px"
>&lt;/p>
&lt;hr>
&lt;h3 id="outline">Outline
&lt;/h3>&lt;p>多开一个pass，平滑法线后back face沿着法线方向平移，都是基础做法。其实也可以用后处理来做。但是URP 2022才支持不用写后处理脚本，直接贴matertial上去，后面在尝试做一版吧。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Name&lt;/span> &lt;span class="s">&amp;#34;OutLine&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;LightMode&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;SRPDefaultUnlit&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Cull&lt;/span> &lt;span class="n">front&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">HLSLPROGRAM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Varyings&lt;/span> &lt;span class="n">vert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Attributes&lt;/span> &lt;span class="n">IN&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">half4&lt;/span> &lt;span class="n">scaledScreenParams&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">GetScaledScreenParams&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">half&lt;/span> &lt;span class="n">ScaleX&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">scaledScreenParams&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">scaledScreenParams&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Varyings&lt;/span> &lt;span class="n">OUT&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">VertexPositionInputs&lt;/span> &lt;span class="n">vertexInput&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">GetVertexPositionInputs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IN&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">positionOS&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">VertexNormalInputs&lt;/span> &lt;span class="n">normalInput&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">GetVertexNormalInputs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IN&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">half3&lt;/span> &lt;span class="n">normalCS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TransformWorldToHClipDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalInput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normalWS&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">half2&lt;/span> &lt;span class="n">extendDis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalCS&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mf">0.1&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.01&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">extendDis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">/=&lt;/span>&lt;span class="n">ScaleX&lt;/span> &lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">OUT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">positionCS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vertexInput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">positionCS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">OUT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">positionCS&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+=&lt;/span>&lt;span class="n">extendDis&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">OUT&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">half4&lt;/span> &lt;span class="n">frag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Varyings&lt;/span> &lt;span class="n">IN&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="nd">SV_Target&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kt">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ENDHLSL&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230220104936235.png"
width="1458"
height="739"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230220104936235_hu_b65cbf9e7e521cd4.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230220104936235_hu_8e9e25ce4a0cc558.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="197"
data-flex-basis="473px"
>&lt;/p>
&lt;hr>
&lt;h2 id="暂时效果">暂时效果
&lt;/h2>&lt;p>&lt;img src="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230220105004875.png"
width="1458"
height="739"
srcset="https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230220105004875_hu_7d683242176ee54d.png 480w, https://kampter.github.io/p/urp%E4%BB%BF%E5%8E%9F%E7%A5%9E%E6%B8%B2%E6%9F%93shader/image-20230220105004875_hu_89e4fe8c4874426.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="197"
data-flex-basis="473px"
>&lt;/p>
&lt;p>还缺少深度空间边缘光，哦对头发的高光也应该额外处理，留个坑以后去实现。&lt;/p>
&lt;h2 id="参考">参考
&lt;/h2>&lt;ol>
&lt;li>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/551104542" target="_blank" rel="noopener"
>【01】Unity URP 卡通渲染 原神角色渲染记录-Diffuse: Ramp + AO + Double Shadow - 知乎 (zhihu.com)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/435005339" target="_blank" rel="noopener"
>【Unity技术美术】 原神Shader渲染还原解析 - 知乎 (zhihu.com)&lt;/a>&lt;/li>
&lt;li>[&lt;a class="link" href="https://zhuanlan.zhihu.com/p/547129280" target="_blank" rel="noopener"
>卡通渲染]二、原神角色渲染还原 - Diffuse-1 - 知乎 (zhihu.com)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/360229590" target="_blank" rel="noopener"
>原神角色渲染Shader分析还原 - 知乎 (zhihu.com)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/110025903" target="_blank" rel="noopener"
>【02】从零开始的卡通渲染-着色篇1 - 知乎 (zhihu.com)&lt;/a>&lt;/li>
&lt;li>[&lt;a class="link" href="https://zhuanlan.zhihu.com/p/551629982" target="_blank" rel="noopener"
>卡通渲染]等宽屏幕空间边缘光 - 知乎 (zhihu.com)&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>军团要塞2渲染shader实现</title><link>https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/</link><pubDate>Mon, 16 Jan 2023 15:25:58 +0000</pubDate><guid>https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/</guid><description>&lt;h2 id="技术分析">技术分析
&lt;/h2>&lt;p>论文中有一篇非常形象的图片来实现渲染效果&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/Figure6_1.png"
width="456"
height="519"
srcset="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/Figure6_1_hu_a147c78b3ef9a25.png 480w, https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/Figure6_1_hu_7bda6fe2f4c7e9f2.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="87"
data-flex-basis="210px"
>&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/Figure6.png"
width="409"
height="548"
srcset="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/Figure6_hu_aa926cd21ace77b4.png 480w, https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/Figure6_hu_2e31333970a6bac7.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="74"
data-flex-basis="179px"
>&lt;/p>
&lt;h3 id="albedo">Albedo
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Albedo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">mainTex&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SAMPLE_TEXTURE2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sampler_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">IN&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_MainColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mainTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kt">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_SHAr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">unity_SHAg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">unity_SHAb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>直接采样人物的贴图，顺手再把其他的贴图也一并采样进来。&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217154828034.png"
width="1470"
height="751"
srcset="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217154828034_hu_340d215d70958c52.png 480w, https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217154828034_hu_f5e996463f5cd500.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="195"
data-flex-basis="469px"
>&lt;/p>
&lt;hr>
&lt;h3 id="wraped-diffuse">Wraped diffuse
&lt;/h3>&lt;p>论文中的光照实现公式为&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/%E5%85%AC%E5%BC%8F1.png"
width="344"
height="60"
srcset="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/%E5%85%AC%E5%BC%8F1_hu_fa0569f760db2e24.png 480w, https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/%E5%85%AC%E5%BC%8F1_hu_334b77e9731f2da0.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="573"
data-flex-basis="1376px"
>&lt;/p>
&lt;p>在unity实现中使用ramp的方式即采样ramp时的uv 参数用halfLambert 组成的X分量，叠加上主光源即可。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">// Half Lambert
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">half ndotL = max(0, dot(normalWS, lightDir));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">half lambert = ndotL;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">half halfLambert= saturate(lambert * 0.5 + 0.5);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">half4 ramp = SAMPLE_TEXTURE2D(_RampMap, sampler_RampMap, half2(halfLambert, 0));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">half4 wrapDiffuseTerm = ramp * lightColor;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217160722860.png"
width="1470"
height="751"
srcset="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217160722860_hu_10805f57114e12c3.png 480w, https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217160722860_hu_1a9708acf505a00d.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="195"
data-flex-basis="469px"
>&lt;/p>
&lt;hr>
&lt;h3 id="ambient">Ambient
&lt;/h3>&lt;p>ambient实现比较复杂，这里直接抄unity urp中关于SH 求谐函数的代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="n">real3&lt;/span> &lt;span class="n">SH_indirectDiffuse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">real3&lt;/span> &lt;span class="n">normalWS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">real&lt;/span> &lt;span class="n">AO&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">real4&lt;/span> &lt;span class="n">SHCoefficients&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SHCoefficients&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">unity_SHAr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SHCoefficients&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">unity_SHAg&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SHCoefficients&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">unity_SHAb&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SHCoefficients&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">unity_SHBr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SHCoefficients&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">unity_SHBg&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SHCoefficients&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">unity_SHBb&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SHCoefficients&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">unity_SHC&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">real3&lt;/span> &lt;span class="n">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SampleSH9&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SHCoefficients&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">normalWS&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">AO&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217161718102.png"
width="1470"
height="751"
srcset="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217161718102_hu_475ffe1083c66e9a.png 480w, https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217161718102_hu_ebbcf4dc61ee575b.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="195"
data-flex-basis="469px"
>&lt;/p>
&lt;hr>
&lt;h3 id="view-independent-lighting-terms">View Independent Lighting Terms
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">viewIndependentLightTerms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">indirectDiffuse&lt;/span>&lt;span class="o">+&lt;/span> &lt;span class="n">wrapDiffuseTerm&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217162038823.png"
width="1470"
height="751"
srcset="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217162038823_hu_d5b16d3469b648ce.png 480w, https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217162038823_hu_a71b6c7d3825049c.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="195"
data-flex-basis="469px"
>&lt;/p>
&lt;hr>
&lt;h3 id="view-dependent-lighting-terms">View Dependent Lighting Terms
&lt;/h3>&lt;p>论文中计算依赖视角的光照部分的公式&lt;/p>
&lt;p>&lt;img src="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/%E5%85%AC%E5%BC%8F2.png"
width="758"
height="139"
srcset="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/%E5%85%AC%E5%BC%8F2_hu_b22158c19b49a8ae.png 480w, https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/%E5%85%AC%E5%BC%8F2_hu_a5450ee99dc639f7.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="545"
data-flex-basis="1308px"
>&lt;/p>
&lt;p>在依赖视角的光照部分中，《军团要塞2》除了考虑一般的Phong高光外，还基于菲涅尔现象实现了类似边缘光的效果。Specular就是式子中的左半部分，Rim lighting就是式子中的右半部分。&lt;/p>
&lt;p>原版实现代码如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//计算View Independent Lighting Terms&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">viewIndependentLightTerms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">indirectDiffuse&lt;/span>&lt;span class="o">+&lt;/span> &lt;span class="n">wrapDiffuseTerm&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Specular&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">fs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_FresnelSpecular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">spec&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fs&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nb">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ndotH&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">smoothness&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">spec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_KSpecular&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">_SpecularColor&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">metalMask&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Rim Lightingw&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">kr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">fr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">ndotV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">rim&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">kr&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">fr&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nb">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">spec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_RimPower&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Dedicated Rim Lighting &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">aV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kt">half&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">dedicatedRimLighting&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ndotU&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">fr&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">kr&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">aV&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Multiple Phong Terms&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">ks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">multiplePhongTerms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ks&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">lightColor&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">specular&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rim&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half4&lt;/span> &lt;span class="n">viewDependentLightTerms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">multiplePhongTerms&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">dedicatedRimLighting&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>参考没有遮罩的时候，转换成另一种算法，同时替代phong高光为blinn phong。&lt;/p>
&lt;p>添加Fresnel 效果的 multiplePhongTerms 高光模型&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 计算View dependent Lighting Terms&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">halfVector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">viewDirWS&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">lightDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ndotH&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">fresnel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nb">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">viewDirWS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfVector&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mf">5.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fresnel&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mf">1.0&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">fresnel&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">multiplePhongTerms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">fresnel&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">lightColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217171838962.png"
width="1470"
height="751"
srcset="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217171838962_hu_ae137de5256271d4.png 480w, https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217171838962_hu_4b03faf9cca02011.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="195"
data-flex-basis="469px"
>&lt;/p>
&lt;hr>
&lt;h3 id="rim-light-实现">Rim Light 实现
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half&lt;/span> &lt;span class="n">rim&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nb">saturate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ndotV&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">dedicatedRimLighting&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_RimLightColor&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nb">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rim&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_RimPower&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217171853212.png"
width="1470"
height="751"
srcset="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217171853212_hu_496bf487f2414b05.png 480w, https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217171853212_hu_63ab91f8e385f81f.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="195"
data-flex-basis="469px"
>&lt;/p>
&lt;hr>
&lt;h2 id="合成效果">合成效果
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-HLSL" data-lang="HLSL">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">viewDependentLightTerms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">lightColor&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">multiplePhongTerms&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dedicatedRimLighting&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Combine&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">half3&lt;/span> &lt;span class="n">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">viewIndependentLightTerms&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">viewDependentLightTerms&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217171948752.png"
width="1470"
height="751"
srcset="https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217171948752_hu_44556985dc272e48.png 480w, https://kampter.github.io/p/%E5%86%9B%E5%9B%A2%E8%A6%81%E5%A1%9E2%E6%B8%B2%E6%9F%93shader%E5%AE%9E%E7%8E%B0/image-20230217171948752_hu_42ee623747f0f005.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="195"
data-flex-basis="469px"
>&lt;/p>
&lt;hr>
&lt;p>哦豁打完收工，忽略没有写投影pass。wrapped diffuse的效果提供明暗交界处有明显的泛红。&lt;/p>
&lt;h2 id="参考">参考
&lt;/h2>&lt;ol>
&lt;li>&lt;a class="link" href="https://steamcdn-a.akamaihd.net/apps/valve/2007/NPAR07_IllustrativeRenderingInTeamFortress2.pdf" target="_blank" rel="noopener"
>NPAR07_IllustrativeRenderingInTeamFortress2.pdf (akamaihd.net)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://richbabe.top/2018/12/12/%e5%86%9b%e5%9b%a2%e8%a6%81%e5%a1%9e2-%e5%8d%a1%e9%80%9a%e6%b8%b2%e6%9f%93%e7%ae%97%e6%b3%95%e5%ae%9e%e7%8e%b0/" target="_blank" rel="noopener"
>《军团要塞2》卡通渲染算法实现 - Richbabe的博客 | Richbabe Blog&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://blog.csdn.net/candycat1992/article/details/37696187" target="_blank" rel="noopener"
>【Shader拓展】Illustrative Rendering in Team Fortress 2_妈妈说女孩子要自立自强的博客-CSDN博客&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://polycount.com/discussion/94026/shader-specular-term-fresnel" target="_blank" rel="noopener"
>Shader - Specular Term - Fresnel — polycount&lt;/a>&lt;/li>
&lt;/ol></description></item></channel></rss>